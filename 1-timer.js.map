{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst startBtnEl = document.querySelector(\".timer-start-btn\");\nlet userSelectedDate = 0;\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        // console.log(selectedDates[0]);\n        if (selectedDates[0].getTime() <= Date.now()) {\n            startBtnEl.classList.remove(\"is-active\");\n            return window.alert(\"Please choose a date in the future\");\n        } else {\n            userSelectedDate = selectedDates[0].getTime();\n            startBtnEl.classList.add(\"is-active\");\n        }\n    },\n};\nflatpickr(\"#datetime-picker\", options);\n\nstartBtnEl.addEventListener(\"click\", foo1);\nfunction foo1(event) {\n    const intervalId = setInterval(foo2, 1000);\n    function foo2() {\n        // const currentTime = Date.now();\n        const timeDifference = userSelectedDate - Date.now();\n        if (timeDifference < 0) {\n            return;\n        } else {\n            // console.log(timeDifference);\n        }\n    }\n}\n\n// // Mod 10, Les-1 Repo\n// class Timer {\n//   constructor({ onTick }) {\n//     this.intervalId = null;\n//     this.isActive = false;\n//     this.onTick = onTick;\n\n//     this.init();\n//   }\n\n//   init() {\n//     const time = this.getTimeComponents(0);\n//     this.onTick(time);\n//   }\n\n//   start() {\n//     if (this.isActive) {\n//       return;\n//     }\n\n//     const startTime = Date.now();\n//     this.isActive = true;\n\n//     this.intervalId = setInterval(() => {\n//       const currentTime = Date.now();\n//       const deltaTime = currentTime - startTime;\n//       const time = this.getTimeComponents(deltaTime);\n\n//       this.onTick(time);\n//     }, 1000);\n//   }\n\n//   stop() {\n//     if (this.isActive) {\n//       clearInterval(this.intervalId);\n//       this.isActive = false;\n\n//       stopBtn.textContent = \"Reset\";\n//       return;\n//     }\n\n//     const time = this.getTimeComponents(0);\n//     this.onTick(time);\n//     stopBtn.textContent = \"Stop\";\n//   }\n\n//   /**\n//    * - –ü—Ä–∏–π–º–∞—î —á–∞—Å –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö\n//    * - –í–∏—Ä–∞—Ö–æ–≤—É—î —Å–∫—ñ–ª—å–∫–∏ –≤ –Ω–∏—Ö –≤–º—ñ—â–∞—î—Ç—å—Å—è –≥–æ–¥–∏–Ω/—Ö–≤–∏–ª–∏–Ω/—Å–µ–∫—É–Ω–¥\n//    * - –ü–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ hours, mins, secs\n//    * - –ê–¥—Å—å–∫–∞ –∫–æ–ø—ñ–ø–∞—Å—Ç–∞ –∑ stackoverflow üí©\n//    */\n//   getTimeComponents(time) {\n//     const hours = this.pad(\n//       Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n//     );\n//     const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//     const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n//     return { hours, mins, secs };\n//   }\n\n//   /**\n//    * –ü—Ä–∏–π–º–∞—î —á–∏—Å–ª–æ, –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î –π–æ–≥–æ –≤ —Ä—è–¥–æ–∫ —ñ –¥–æ–¥–∞—î –≤ –ø–æ—á–∞—Ç–æ–∫ 0, —è–∫—â–æ —á–∏—Å–ª–æ –º–µ–Ω—à–µ 2-—Ö –∑–Ω–∞–∫—ñ–≤\n//    */\n//   pad(value) {\n//     return String(value).padStart(2, \"0\");\n//   }\n// }\n\n// const startBtn = document.querySelector(\"button[data-action-start]\");\n// const stopBtn = document.querySelector(\"button[data-action-stop]\");\n// const clockface = document.querySelector(\".js-clockface\");\n\n// const timer = new Timer({\n//   onTick: updateClockface,\n// });\n\n// startBtn.addEventListener(\"click\", timer.start.bind(timer));\n// stopBtn.addEventListener(\"click\", timer.stop.bind(timer));\n\n// /**\n//  * - –ü—Ä–∏–π–º–∞—î —á–∞—Å —è–∫ –æ–± º—î–∫—Ç –∑ –≥–æ–¥–∏–Ω–∞–º–∏/—Ö–≤–∏–ª–∏–Ω–∞–º–∏/—Å–µ–∫—É–Ω–¥–∞–º–∏\n//  * - –†–µ–Ω–¥–µ—Ä–∏—Ç—å —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n//  */\n// function updateClockface({ hours, mins, secs }) {\n//   clockface.textContent = `${hours}:${mins}:${secs}`;\n// }\n\n// Trial #2 - Linked library, date-picker works properly, nothing else added\n// import flatpickr from \"flatpickr\";\n// import \"flatpickr/dist/flatpickr.min.css\";\n\n// const options = {\n//     enableTime: true,\n//     time_24hr: true,\n//     defaultDate: new Date(),\n//     minuteIncrement: 1,\n//     onClose(selectedDates) {\n//         console.log(selectedDates[0]);\n//     },\n// };\n// flatpickr(\"#datetime-picker\", options);\n\n\n// Trial #1\n// import flatpickr from \"flatpickr\";\n\n// import \"flatpickr/dist/flatpickr.min.css\";\n\n\n// const dateInputEl = document.querySelector(\"#datetime-picker\");\n// const pickerOptions = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     console.log(selectedDates[0]);\n//   },\n// };\n\n// dateInputEl.addEventListener(\"input\", () {\n//     flatpickr(\"#datepicker\", pickerOptions);\n//   });\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     flatpickr(\"#datepicker\", pickerOptions);\n//   });\n\n\n// let userSelectedDate = "],"names":["startBtnEl","userSelectedDate","options","selectedDates","flatpickr","foo1","event","foo2"],"mappings":"0xBAGA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EAC5D,IAAIC,EAAmB,EACvB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAEnB,GAAIA,EAAc,CAAC,EAAE,QAAO,GAAM,KAAK,MACnC,OAAAH,EAAW,UAAU,OAAO,WAAW,EAChC,OAAO,MAAM,oCAAoC,EAExDC,EAAmBE,EAAc,CAAC,EAAE,QAAO,EAC3CH,EAAW,UAAU,IAAI,WAAW,CAE3C,CACL,EACAI,EAAU,mBAAoBF,CAAO,EAErCF,EAAW,iBAAiB,QAASK,CAAI,EACzC,SAASA,EAAKC,EAAO,CACE,YAAYC,EAAM,GAAI,EACzC,SAASA,GAAO,CAEWN,EAAmB,KAAK,IAAG,EAC7B,CAKxB,CACL"}